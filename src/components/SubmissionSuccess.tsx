import React, { useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';

interface SubmissionSuccessProps {
  inspectionData: any;
  onNewInspection: () => void;
  onGoToDashboard: () => void;
}

const SubmissionSuccess = ({ inspectionData, onNewInspection, onGoToDashboard }: SubmissionSuccessProps) => {
  const generateReportId = () => {
    const date = new Date().toISOString().split('T')[0].replace(/-/g, '');
    const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
    return `FL-${date}-${random}`;
  };

  const generateProfessionalPDFContent = () => {
    const reportId = generateReportId();
    const currentDate = new Date().toLocaleString();
    
    return `
═══════════════════════════════════════════════════════════════════════════════
                            CITY OF LONDON
                      PARKS & RECREATION DEPARTMENT
                         DAILY VEHICLE INSPECTION REPORT
═══════════════════════════════════════════════════════════════════════════════

REPORT INFORMATION
──────────────────────────────────────────────────────────────────────────────
Report ID:          ${reportId}
Date Generated:     ${currentDate}
System:             FleetCheck v1.0

DRIVER INFORMATION
──────────────────────────────────────────────────────────────────────────────
Driver Name:        ${inspectionData.driverName}
Driver ID:          ${inspectionData.driverId || 'N/A'}

VEHICLE INFORMATION
──────────────────────────────────────────────────────────────────────────────
Vehicle:            ${inspectionData.vehicleName || 'N/A'}
Inspection Date:    ${inspectionData.date || 'N/A'}

START OF DAY INSPECTION
──────────────────────────────────────────────────────────────────────────────
Start Time:         ${inspectionData.time || 'N/A'}
Odometer Reading:   ${inspectionData.odometerStart || 'N/A'} km

EQUIPMENT STATUS CHECKLIST
──────────────────────────────────────────────────────────────────────────────
${inspectionData.equipment ? Object.entries(inspectionData.equipment).map(([key, value]) => 
  `${key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}: ${value ? '✓ PASS' : '✗ FAIL'}`
).join('\n') : 'No equipment data available'}

START OF DAY NOTES
──────────────────────────────────────────────────────────────────────────────
${inspectionData.notes || 'No notes provided'}

END OF DAY INSPECTION
──────────────────────────────────────────────────────────────────────────────
End Time:           ${inspectionData.endTime || 'N/A'}
End Odometer:       ${inspectionData.odometerEnd || 'N/A'} km
Total Distance:     ${inspectionData.odometerEnd && inspectionData.odometerStart ? 
  (parseInt(inspectionData.odometerEnd) - parseInt(inspectionData.odometerStart)) + ' km' : 'N/A'}

END OF DAY NOTES
──────────────────────────────────────────────────────────────────────────────
${inspectionData.endNotes || 'No notes provided'}

DAMAGE REPORT
──────────────────────────────────────────────────────────────────────────────
${inspectionData.damageReport || 'No damage reported'}

SUPERVISOR INFORMATION
──────────────────────────────────────────────────────────────────────────────
Supervisor:         ${inspectionData.supervisor?.name || 'N/A'}
Department:         ${inspectionData.supervisor?.department || 'N/A'}
Email:              ${inspectionData.supervisor?.email || 'N/A'}

DIGITAL SIGNATURE
──────────────────────────────────────────────────────────────────────────────
Driver Signature:   ✓ DIGITALLY SIGNED
Signature Date:     ${currentDate}

CERTIFICATION
──────────────────────────────────────────────────────────────────────────────
I certify that I have completed this vehicle inspection to the best of my 
ability and that all information provided is accurate and complete.

Driver: ${inspectionData.driverName}
Date: ${new Date().toLocaleDateString()}

═══════════════════════════════════════════════════════════════════════════════
This report was automatically generated by FleetCheck v1.0
City of London Parks & Recreation Department
For questions or concerns, please contact your supervisor.
═══════════════════════════════════════════════════════════════════════════════
    `.trim();
  };

  const handleEmailSupervisor = () => {
    console.log('=== EMAIL BUTTON CLICKED ===');
    console.log('Email button clicked - checking supervisor email...');
    
    if (!inspectionData.supervisor?.email) {
      console.log('ERROR: No supervisor email available');
      alert('No supervisor email available');
      return;
    }

    console.log('SUCCESS: Supervisor email found:', inspectionData.supervisor.email);

    const pdfContent = generateProfessionalPDFContent();
    const reportId = generateReportId();
    
    const subject = `Daily Vehicle Inspection Report - ${inspectionData.driverName} - ${reportId}`;
    const body = `Dear ${inspectionData.supervisor.name},

Please find the vehicle inspection report below:

INSPECTION SUMMARY:
- Driver: ${inspectionData.driverName}
- Vehicle: ${inspectionData.vehicleName || 'N/A'}
- Date: ${inspectionData.date || new Date().toLocaleDateString()}
- Report ID: ${reportId}

DETAILED REPORT:
${pdfContent}

This report has been automatically generated and digitally signed through the FleetCheck system.

Best regards,
FleetCheck Automated System
City of London Parks & Recreation Department`;

    const mailtoLink = `mailto:${inspectionData.supervisor.email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
    
    console.log('Generated mailto link length:', mailtoLink.length);
    console.log('Supervisor email for mailto:', inspectionData.supervisor.email);
    console.log('Attempting to open email client...');
    
    // Method 1: Direct window location
    try {
      console.log('Trying window.location.href method...');
      window.location.href = mailtoLink;
      console.log('window.location.href executed');
    } catch (error) {
      console.error('Method 1 failed:', error);
    }
    
    // Method 2: Window.open as backup
    try {
      console.log('Trying window.open method...');
      const result = window.open(mailtoLink, '_self');
      console.log('window.open result:', result);
    } catch (error) {
      console.error('Method 2 failed:', error);
    }
    
    // Method 3: Create link element
    try {
      console.log('Trying link element method...');
      const link = document.createElement('a');
      link.href = mailtoLink;
      link.target = '_self';
      link.style.display = 'none';
      document.body.appendChild(link);
      console.log('Link created and added to DOM');
      link.click();
      console.log('Link clicked');
      document.body.removeChild(link);
      console.log('Link removed from DOM');
    } catch (error) {
      console.error('Method 3 failed:', error);
    }
    
    // Show detailed feedback
    console.log('=== ALL METHODS ATTEMPTED ===');
    alert(`Attempting to open email for: ${inspectionData.supervisor.email}\n\nIf Gmail doesn't open, please:\n1. Check if you have a default email app set\n2. Try copying the email manually: ${inspectionData.supervisor.email}\n3. Check browser console (F12) for errors`);
  };

  // Automatically send email when component loads
  useEffect(() => {
    console.log('=== COMPONENT LOADED ===');
    console.log('SubmissionSuccess component loaded');
    console.log('Inspection data:', inspectionData);
    
    if (inspectionData.supervisor?.email) {
      console.log('Auto-opening email client for supervisor:', inspectionData.supervisor.email);
      // Small delay to ensure component is fully rendered
      setTimeout(() => {
        console.log('Auto-triggering email after delay...');
        handleEmailSupervisor();
      }, 1000);
    } else {
      console.log('No supervisor email found for auto-open');
    }
  }, []);

  const reportId = generateReportId();

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-50 to-green-50 p-4 flex items-center justify-center">
      <Card className="w-full max-w-2xl shadow-2xl border-0">
        <CardContent className="p-8 text-center space-y-6">
          <div className="flex justify-center mb-4">
            <img
              src="/lovable-uploads/d06e4237-0209-4e8b-ab56-fa47f79f7ca5.png"
              alt="City of London"
              className="h-16 w-16"
            />
          </div>
          
          <div className="text-6xl mb-4">✅</div>
          
          <h1 className="text-3xl font-bold text-emerald-800">Inspection Complete!</h1>
          
          <p className="text-emerald-700 text-lg">
            Your daily vehicle inspection has been successfully submitted. Your email client should open automatically to send the report to your supervisor.
          </p>

          <div className="bg-white rounded-lg p-6 space-y-4 border border-emerald-200">
            <div className="flex justify-between items-center">
              <span className="font-medium text-emerald-800">Report ID:</span>
              <Badge variant="secondary" className="text-lg px-3 py-1 bg-emerald-100 text-emerald-800">{reportId}</Badge>
            </div>
            
            <div className="flex justify-between items-center">
              <span className="font-medium text-emerald-800">Submission Time:</span>
              <span className="text-emerald-700">{new Date().toLocaleString()}</span>
            </div>
            
            <div className="flex justify-between items-center">
              <span className="font-medium text-emerald-800">Driver:</span>
              <span className="text-emerald-700">{inspectionData.driverName}</span>
            </div>

            {inspectionData.vehicleName && (
              <div className="flex justify-between items-center">
                <span className="font-medium text-emerald-800">Vehicle:</span>
                <span className="text-emerald-700">{inspectionData.vehicleName}</span>
              </div>
            )}

            {inspectionData.supervisor && (
              <div className="flex justify-between items-center">
                <span className="font-medium text-emerald-800">Report Ready for:</span>
                <div className="text-right">
                  <div className="text-emerald-700 font-medium">{inspectionData.supervisor.name}</div>
                  <div className="text-sm text-emerald-600">{inspectionData.supervisor.department}</div>
                  <div className="text-xs text-emerald-500">{inspectionData.supervisor.email}</div>
                </div>
              </div>
            )}
          </div>

          <div className="bg-emerald-100 border border-emerald-300 rounded-lg p-4">
            <h3 className="font-semibold text-emerald-800 mb-2">Report Status:</h3>
            <ul className="text-emerald-700 text-sm space-y-1 text-left">
              <li>✅ PDF report automatically generated</li>
              <li>📧 Email client opens with report content</li>
              <li>💾 Data saved locally for your records</li>
              <li>🔍 Available for fleet maintenance review</li>
            </ul>
          </div>

          <div className="bg-yellow-50 border border-yellow-300 rounded-lg p-4">
            <p className="text-yellow-800 text-sm">
              <strong>Note:</strong> The email will contain the full report text. If you need a PDF attachment, you may need to copy the report content into a PDF creator or print to PDF from your email client.
            </p>
          </div>

          <div className="bg-red-50 border border-red-300 rounded-lg p-4">
            <p className="text-red-800 text-sm">
              <strong>Troubleshooting:</strong> If the email doesn't open automatically, please check:
              <br />• Your browser allows popup windows from this site
              <br />• You have a default email app configured
              <br />• Press F12 and check the Console tab for error messages
            </p>
          </div>

          <div className="flex gap-4 pt-4">
            <Button 
              onClick={handleEmailSupervisor}
              className="flex-1 h-12 text-base bg-emerald-700 hover:bg-emerald-800 text-white font-medium"
            >
              📧 Email PDF Report
            </Button>
          </div>

          <div className="flex gap-4">
            <Button 
              onClick={onNewInspection}
              variant="outline"
              className="flex-1 h-12 text-base border-2 border-emerald-600 text-emerald-700 hover:bg-emerald-50 font-medium"
            >
              Start New Inspection
            </Button>
            
            <Button 
              onClick={onGoToDashboard}
              variant="outline"
              className="flex-1 h-12 text-base border-2 border-emerald-600 text-emerald-700 hover:bg-emerald-50 font-medium"
            >
              📱 View Dashboard
            </Button>
          </div>

          <p className="text-xs text-emerald-600 pt-4">
            City of London Parks & Recreation Department - FleetCheck v1.0
          </p>
        </CardContent>
      </Card>
    </div>
  );
};

export default SubmissionSuccess;
